{"ast":null,"code":"var _jsxFileName = \"E:\\\\react basics\\\\POP-UP\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport CourseInput from './CourseInput/CourseInput';\nimport CourseGoal from './CourseGoal/CourseGoal';\nimport ErrorModel from './UI/ErrorModel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [DataGoals, setDataGoal] = useState([{\n    username: 'Max',\n    age: 31,\n    id: ''\n  }]);\n  const [error, setError] = useState('');\n\n  const addDataHandler = (enteredData, enteredDataAge) => {\n    if (enteredData.trim().length === 0 || enteredData.trim().length === 0) {\n      setError({\n        title: 'Invalid input',\n        message: 'Please enter a valid name and age (non-empty values).'\n      });\n      return;\n    }\n\n    if (enteredDataAge < 0) {\n      setError({\n        title: 'Invalid age',\n        message: 'Please enter a valid  age (greater than zero).'\n      });\n      return;\n    }\n\n    setDataGoal(prevGoals => {\n      const updatedGoals = [...prevGoals];\n      updatedGoals.unshift({\n        username: enteredData,\n        age: enteredDataAge,\n        id: Math.random().toString()\n      });\n      console.log(updatedGoals);\n      return updatedGoals;\n    });\n  };\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: \"NO DATA AVAILABLE!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n\n  if (DataGoals.length > 0) {\n    console.log(DataGoals);\n    content = /*#__PURE__*/_jsxDEV(CourseGoal, {\n      items: DataGoals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n  const errorHandler = () => {\n    setError(null);\n  }; //component for error msg  \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModel, {\n      title: error.title,\n      message: error.message,\n      onError: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"goals\",\n      children: /*#__PURE__*/_jsxDEV(CourseInput, {\n        onAddGoal: addDataHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"goals-list\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Y9l/DYz6x6vls3oqB+9xmYK0Myc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/react basics/POP-UP/src/App.js"],"names":["React","useState","CourseInput","CourseGoal","ErrorModel","App","DataGoals","setDataGoal","username","age","id","error","setError","addDataHandler","enteredData","enteredDataAge","trim","length","title","message","prevGoals","updatedGoals","unshift","Math","random","toString","console","log","content","textAlign","errorHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CACvC;AAACO,IAAAA,QAAQ,EAAC,KAAV;AAAgBC,IAAAA,GAAG,EAAC,EAApB;AAAuBC,IAAAA,EAAE,EAAC;AAA1B,GADuC,CAAD,CAAxC;AAGA,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAmBX,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMY,cAAc,GAAG,CAACC,WAAD,EAAaC,cAAb,KAA8B;AACnD,QAAGD,WAAW,CAACE,IAAZ,GAAmBC,MAAnB,KAA4B,CAA5B,IAA+BH,WAAW,CAACE,IAAZ,GAAmBC,MAAnB,KAA4B,CAA9D,EAAgE;AAC9DL,MAAAA,QAAQ,CAAC;AACPM,QAAAA,KAAK,EAAC,eADC;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAIA;AACD;;AACD,QAAGJ,cAAc,GAAC,CAAlB,EAAoB;AAClBH,MAAAA,QAAQ,CAAC;AACPM,QAAAA,KAAK,EAAC,aADC;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAIA;AACD;;AACDZ,IAAAA,WAAW,CAACa,SAAS,IAAE;AACrB,YAAMC,YAAY,GAAG,CAAC,GAAGD,SAAJ,CAArB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB;AAACd,QAAAA,QAAQ,EAACM,WAAV;AAAsBL,QAAAA,GAAG,EAACM,cAA1B;AAAyCL,QAAAA,EAAE,EAACa,IAAI,CAACC,MAAL,GAAcC,QAAd;AAA5C,OAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACA,aAAOA,YAAP;AACD,KALU,CAAX;AAMD,GArBD;;AAsBA,MAAIO,OAAO,gBACT;AAAG,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAC;AAAX,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAGA,MAAGvB,SAAS,CAACW,MAAV,GAAiB,CAApB,EAAsB;AACpBS,IAAAA,OAAO,CAACC,GAAR,CAAYrB,SAAZ;AACAsB,IAAAA,OAAO,gBACL,QAAC,UAAD;AAAY,MAAA,KAAK,EAAItB;AAArB;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AACD,QAAMwB,YAAY,GAAG,MAAI;AACvBlB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD,CApCa,CAuCb;;;AACA,sBACE;AAAA,eACGD,KAAK,iBAAE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAGA,KAAK,CAACO,KAA1B;AAAiC,MAAA,OAAO,EAAIP,KAAK,CAACQ,OAAlD;AAA2D,MAAA,OAAO,EAAIW;AAAtE;AAAA;AAAA;AAAA;AAAA,YADV,eAEE;AAAS,MAAA,EAAE,EAAG,OAAd;AAAA,6BACE,QAAC,WAAD;AAAc,QAAA,SAAS,EAAEjB;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAS,MAAA,EAAE,EAAE,YAAb;AAAA,gBACGe;AADH;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GApDQvB,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\nimport CourseInput from './CourseInput/CourseInput';\nimport CourseGoal from './CourseGoal/CourseGoal';\nimport ErrorModel from './UI/ErrorModel';\nfunction App() {\n  const [DataGoals,setDataGoal] = useState([\n    {username:'Max',age:31,id:''}\n  ]);\n  const[error,setError] = useState('');\n  const addDataHandler = (enteredData,enteredDataAge)=>{\n    if(enteredData.trim().length===0||enteredData.trim().length===0){\n      setError({\n        title:'Invalid input',\n        message: 'Please enter a valid name and age (non-empty values).'\n      });\n      return;\n    }\n    if(enteredDataAge<0){\n      setError({\n        title:'Invalid age',\n        message: 'Please enter a valid  age (greater than zero).'\n      });\n      return;\n    }\n    setDataGoal(prevGoals=>{\n      const updatedGoals = [...prevGoals];\n      updatedGoals.unshift({username:enteredData,age:enteredDataAge,id:Math.random().toString()});\n      console.log(updatedGoals);\n      return updatedGoals;\n    });\n  }\n  let content = (\n    <p style={{textAlign:'center'}}>NO DATA AVAILABLE!</p>\n  );\n  if(DataGoals.length>0){\n    console.log(DataGoals);\n    content = (\n      <CourseGoal items = {DataGoals}/>\n    );\n  }\n  const errorHandler = ()=>{\n    setError(null);\n  }\n  //component for error msg  \n  return (\n    <div>\n      {error&&<ErrorModel title ={error.title} message = {error.message} onError = {errorHandler} ></ErrorModel>}\n      <section id = \"goals\">\n        <CourseInput  onAddGoal={addDataHandler}>\n        </CourseInput>\n      </section>\n      <section id =\"goals-list\">\n        {content}\n      </section>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}